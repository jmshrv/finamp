{
  "finamp": "Finamp",
  "@finamp": {
    "description": "App name, possibly translated"
  },
  "startupError": "Something went wrong during app startup. The error was: {error}\n\nPlease create an issue on github.com/UnicornsOnLSD/finamp with a screenshot of this page. If this problem persists you can clear your app data to reset the app.",
  "@startupError": {
    "description": "The error message that shows when startup fails.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Failed to open download DB"
      }
    }
  },
  "loginFlowWelcomeHeading": "Welcome to",
  "@loginFlowWelcomeHeading": {
    "description": "Greeting shown on the login screen. The full message will be 'Welcome to Finamp'."
  },
  "loginFlowSlogan": "Your music, the way you want it.",
  "@loginFlowSlogan": {
    "description": "Slogan shown on the login screen."
  },
  "loginFlowGetStarted": "Get Started!",
  "@loginFlowGetStarted": {
    "description": "Button label for the login/splash screen."
  },
  "viewLogs": "View Logs",
  "@viewLogs": {
    "description": "Label for button shown during the login process that allows the user to view the app logs"
  },
  "changeLanguage": "Change Language",
  "@changeLanguage": {
    "description": "Label for button shown during the login process that allows the user to change the app language"
  },
  "loginFlowServerSelectionHeading": "Connect to Jellyfin",
  "@loginFlowServerSelectionHeading": {
    "description": "Heading for the server selection step during the login flow."
  },
  "back": "Back",
  "@back": {
    "description": "Label for the back button."
  },
  "serverUrl": "Server URL",
  "@serverUrl": {},
  "internalExternalIpExplanation": "If you want to be able to access your Jellyfin server remotely, you need to use your external IP.\n\nIf your server is on a HTTP default port (80 or 443) or Jellyfin's default port (8096), you don't have to specify the port.\n\nIf the URL is correct, you should see some information about your server pop up below the input field.",
  "@internalExternalIpExplanation": {
    "description": "Extra info for which IP to use for remote access, and info on whether or not the user needs to specify a port."
  },
  "serverUrlHint": "e.g. demo.jellyfin.org/stable",
  "@serverUrlHint": {
    "description": "Hint text for the server URL input field. Should be the address to an actual, public Jellyfin server."
  },
  "serverUrlInfoButtonTooltip": "Server URL Help",
  "@serverUrlInfoButtonTooltip": {
    "description": "Tooltip for the button that shows the extra info dialog for which IP to use for remote access, and info on whether or not the user needs to specify a port."
  },
  "emptyServerUrl": "Server URL cannot be empty",
  "@emptyServerUrl": {
    "description": "Error message that shows when the user submits a login without a server URL"
  },
  "connectingToServer": "Trying to connect to server...",
  "@connectingToServer": {
    "description": "Text shown while the connection to the specified server is attempted"
  },
  "loginFlowLocalNetworkServers": "Servers on your local network:",
  "@loginFlowLocalNetworkServers": {
    "description": "Heading for the list of servers on the local network, shown during the login flow. Should ideally have a colon at the end."
  },
  "loginFlowLocalNetworkServersScanningForServers": "Scanning for servers...",
  "@loginFlowLocalNetworkServersScanningForServers": {
    "description": "Text shown while servers are being discovered via UDP broadcasts"
  },
  "loginFlowAccountSelectionHeading": "Select your account",
  "@loginFlowAccountSelectionHeading": {
    "description": "Heading for the account selection step during the login flow."
  },
  "backToServerSelection": "Back to Server Selection",
  "@backToServerSelection": {
    "description": "Label for the button that takes the user back to the server selection step during the login flow."
  },
  "loginFlowNamelessUser": "Unnamed User",
  "@loginFlowNamelessUser": {
    "description": "Name for a user that doesn't have a name set on the server."
  },
  "loginFlowCustomUser": "Custom User",
  "@loginFlowCustomUser": {
    "description": "Label for a button that allows the user to enter a custom username/password, for example if their user account is hidden."
  },
  "loginFlowAuthenticationHeading": "Log in to your account",
  "@loginFlowAuthenticationHeading": {
    "description": "Heading for the authentication step during the login flow."
  },
  "backToAccountSelection": "Back to Account Selection",
  "@backToAccountSelection": {
    "description": "Label for the button that takes the user back to the account selection step during the login flow."
  },
  "loginFlowQuickConnectPrompt": "Use Quick Connect code",
  "@loginFlowQuickConnectPrompt": {
    "description": "Text shown above the quick connect code. The full message will be 'Use Quick Connect code {code}'. The code will be a 6-digit number. Ideally, 'Quick Connect' should be capitalized and translated exactly as it is in the Jellyfin web UI."
  },
  "loginFlowQuickConnectInstructions": "Open the Jellyfin app or website, click on your user icon, and select Quick Connect.",
  "@loginFlowQuickConnectInstructions": {
    "description": "Instructions for how and where to enter the Quick Connect code. Ideally, 'Quick Connect' should be capitalized and translated exactly as it is in the Jellyfin web UI."
  },
  "loginFlowQuickConnectDisabled": "Quick Connect is disabled on this server.",
  "@loginFlowQuickConnectDisabled": {
    "description": "Warning that is shown during authentication if Quick Connect is disabled on the server."
  },
  "orDivider": "or",
  "@orDivider": {
    "description": "Text that separates two different ways to log in. For example, after selecting a server during the login flow, the other can either use Quick Connect, *or* select an account from a list. The text is stylized by wrapping it in dashes: '- or -'."
  },
  "loginFlowSelectAUser": "Select a user",
  "@loginFlowSelectAUser": {
    "description": "Heading for the list of users that the user can select from during the login flow."
  },
  "username": "Username",
  "@username": {},
  "usernameHint": "Enter your username",
  "@usernameHint": {
    "description": "Hint text for the username input field."
  },
  "usernameValidationMissingUsername": "Please enter a username",
  "@usernameValidationMissingUsername": {
    "description": "Error message that shows when the user submits a login without a username"
  },
  "password": "Password",
  "@password": {},
  "passwordHint": "Enter your password",
  "@passwordHint": {
    "description": "Hint text for the password input field."
  },
  "login": "Log In",
  "@login": {
    "description": "Label for the login button."
  },
  "logs": "Logs",
  "@logs": {},
  "next": "Next",
  "@next": {},
  "selectMusicLibraries": "Select Music Libraries",
  "@selectMusicLibraries": {
    "description": "App bar title for library select screen"
  },
  "couldNotFindLibraries": "Could not find any libraries.",
  "@couldNotFindLibraries": {
    "description": "Error message when the user does not have any libraries"
  },
  "unknownName": "Unknown Name",
  "@unknownName": {},
  "songs": "Songs",
  "@songs": {},
  "albums": "Albums",
  "@albums": {},
  "artists": "Artists",
  "@artists": {},
  "genres": "Genres",
  "@genres": {},
  "playlists": "Playlists",
  "@playlists": {},
  "startMix": "Start Mix",
  "@startMix": {},
  "startMixNoSongsArtist": "Long-press an artist to add or remove it from the mix builder before starting a mix",
  "@startMixNoSongsArtist": {
    "description": "Snackbar message that shows when the user presses the instant mix button with no artists selected"
  },
  "startMixNoSongsAlbum": "Long-press an album to add or remove it from the mix builder before starting a mix",
  "@startMixNoSongsAlbum": {
    "description": "Snackbar message that shows when the user presses the instant mix button with no albums selected"
  },
  "music": "Music",
  "@music": {},
  "clear": "Clear",
  "@clear": {},
  "favourites": "Favourites",
  "@favourites": {},
  "shuffleAll": "Shuffle all",
  "@shuffleAll": {},
  "downloads": "Downloads",
  "@downloads": {},
  "settings": "Settings",
  "@settings": {},
  "offlineMode": "Offline Mode",
  "@offlineMode": {},
  "sortOrder": "Sort order",
  "@sortOrder": {},
  "sortBy": "Sort by",
  "@sortBy": {},
  "album": "Album",
  "@album": {},
  "albumArtist": "Album Artist",
  "@albumArtist": {},
  "artist": "Artist",
  "@artist": {},
  "budget": "Budget",
  "@budget": {},
  "communityRating": "Community Rating",
  "@communityRating": {},
  "criticRating": "Critic Rating",
  "@criticRating": {},
  "dateAdded": "Date Added",
  "@dateAdded": {},
  "datePlayed": "Date Played",
  "@datePlayed": {},
  "playCount": "Play Count",
  "@playCount": {},
  "premiereDate": "Premiere Date",
  "@premiereDate": {},
  "productionYear": "Production Year",
  "@productionYear": {},
  "name": "Name",
  "@name": {},
  "random": "Random",
  "@random": {},
  "revenue": "Revenue",
  "@revenue": {},
  "runtime": "Runtime",
  "@runtime": {},
  "syncDownloadedPlaylists": "Sync downloaded playlists",
  "@syncDownloadedPlaylists": {},
  "downloadMissingImages": "Download missing images",
  "@downloadMissingImages": {},
  "downloadedMissingImages": "{count,plural, =0{No missing images found} =1{Downloaded {count} missing image} other{Downloaded {count} missing images}}",
  "@downloadedMissingImages": {
    "description": "Message that shows when the user downloads missing images",
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "activeDownloads": "Active Downloads",
  "@activeDownloads": {},
  "downloadCount": "{count,plural, =1{{count} download} other{{count} downloads}}",
  "@downloadCount": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "downloadedCountUnified": "{songCount,plural,=1{{songCount} song} other{{songCount} songs}}, {imageCount,plural,=1{{imageCount} image} other{{imageCount} images}}\n{syncCount,plural,=1{{syncCount} node syncing} other{{syncCount} nodes syncing}}{repairing, plural, =0{} other{\nCurrently repairing}}",
  "@downloadedCountUnified": {
    "description": "Display of downloaded song and image count on downloads screen.",
    "placeholders": {
        "songCount": {
          "type": "int"
        },
        "imageCount": {
          "type": "int"
        },
      "syncCount": {
        "type": "int"
      },
      "repairing": {
        "type": "int"
      }
    }
  },
  "dlComplete": "{count} complete",
  "@dlComplete": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "dlFailed": "{count} failed",
  "@dlFailed": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "dlEnqueued": "{count} enqueued",
  "@dlEnqueued": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "dlRunning": "{count} running",
  "@dlRunning": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "activeDownloadsTitle": "Active Downloads",
  "@activeDownloadsTitle": {},
  "noActiveDownloads": "No active downloads.",
  "@noActiveDownloads": {},
  "errorScreenError": "An error occurred while getting the list of errors! At this point, you should probably just create an issue on GitHub and delete app data",
  "@errorScreenError": {},
  "failedToGetSongFromDownloadId": "Failed to get song from download ID",
  "@failedToGetSongFromDownloadId": {},
  "deleteDownloadsPrompt": "Are you sure you want to delete the {itemType, select, album{album} playlist{playlist} artist{artist} genre{genre} song{song} library{library} other{item}} '{itemName}' from this device?",
  "@deleteDownloadsPrompt": {
    "placeholders": {
      "itemName": {
        "type": "String",
        "example": "Abandon Ship"
      },
      "itemType": {
        "type": "String",
        "example": "album"
      }
    },
    "description": "Confirmation prompt shown before deleting downloaded media from the local device, destructive action, doesn't affect the media on the server."
  },
  "deleteDownloadsConfirmButtonText": "Delete",
  "@deleteDownloadsConfirmButtonText": {
    "description": "Shown in the confirmation dialog for deleting downloaded media from the local device."
  },
  "deleteDownloadsAbortButtonText": "Cancel",
  "error": "Error",
  "@error": {},
  "discNumber": "Disc {number}",
  "@discNumber": {
    "placeholders": {
      "number": {
        "type": "int"
      }
    }
  },
  "playButtonLabel": "PLAY",
  "@playButtonLabel": {},
  "shuffleButtonLabel": "SHUFFLE",
  "@shuffleButtonLabel": {},
  "songCount": "{count,plural,=1{{count} Song} other{{count} Songs}}",
  "@songCount": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "offlineSongCount": "{count,plural,=1{{count} Song} other{{count} Songs}}, {downloads} Downloaded",
  "@offlineSongCount": {
    "placeholders": {
      "count": {
        "type": "int"
      },
      "downloads": {
        "type": "int"
      }
    }
  },
  "offlineSongCountArtist": "{count,plural,=1{{count} Song} other{{count} Songs}} Downloaded",
  "@offlineSongCountArtis": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "editPlaylistNameTooltip": "Edit playlist name",
  "@editPlaylistNameTooltip": {},
  "editPlaylistNameTitle": "Edit Playlist Name",
  "@editPlaylistNameTitle": {},
  "required": "Required",
  "@required": {},
  "updateButtonLabel": "UPDATE",
  "@updateButtonLabel": {},
  "playlistNameUpdated": "Playlist name updated.",
  "@playlistNameUpdated": {},
  "favourite": "Favourite",
  "@favourite": {},
  "downloadsDeleted": "Downloads deleted.",
  "@downloadsDeleted": {},
  "addDownloads": "Add Downloads",
  "@addDownloads": {},
  "location": "Location",
  "@location": {},
  "confirmDownloadStarted": "Download started",
  "@confirmDownloadStarted": {
    "description": "A confirmation message that is shown after successfully adding an item to the download queue, before it starts being processed and enqueued for download"
  },
  "downloadsQueued": "Download prepared, downloading files",
  "@downloadsQueued": {},
  "addButtonLabel": "ADD",
  "@addButtonLabel": {},
  "shareLogs": "Share logs",
  "@shareLogs": {},
  "logsCopied": "Logs copied.",
  "@logsCopied": {},
  "message": "Message",
  "@message": {},
  "stackTrace": "Stack Trace",
  "@stackTrace": {},
  "applicationLegalese": "Licensed with the Mozilla Public License 2.0. Source code available at:\n\ngithub.com/jmshrv/finamp",
  "@applicationLegalese": {},
  "transcoding": "Transcoding",
  "@transcoding": {},
  "downloadLocations": "Download Locations",
  "@downloadLocations": {},
  "audioService": "Audio Service",
  "@audioService": {},
  "interactions": "Interactions",
  "@interactions": {},
  "layoutAndTheme": "Layout & Theme",
  "@layoutAndTheme": {},
  "notAvailableInOfflineMode": "Not available in offline mode",
  "@notAvailableInOfflineMode": {},
  "logOut": "Log Out",
  "@logOut": {},
  "downloadedSongsWillNotBeDeleted": "Downloaded songs will not be deleted",
  "@downloadedSongsWillNotBeDeleted": {},
  "areYouSure": "Are you sure?",
  "@areYouSure": {},
  "jellyfinUsesAACForTranscoding": "Jellyfin uses AAC for transcoding",
  "@jellyfinUsesAACForTranscoding": {},
  "enableTranscoding": "Enable Transcoding",
  "@enableTranscoding": {},
  "enableTranscodingSubtitle": "Transcodes music streams on the server side.",
  "@enableTranscodingSubtitle": {},
  "bitrate": "Bitrate",
  "@bitrate": {},
  "bitrateSubtitle": "A higher bitrate gives higher quality audio at the cost of higher bandwidth.",
  "@bitrateSubtitle": {},
  "customLocation": "Custom Location",
  "@customLocation": {},
  "appDirectory": "App Directory",
  "@appDirectory": {},
  "addDownloadLocation": "Add Download Location",
  "@addDownloadLocation": {},
  "selectDirectory": "Select Directory",
  "@selectDirectory": {},
  "unknownError": "Unknown Error",
  "@unknownError": {},
  "pathReturnSlashErrorMessage": "Paths that return \"/\" can''t be used",
  "@pathReturnSlashErrorMessage": {},
  "directoryMustBeEmpty": "Directory must be empty",
  "@directoryMustBeEmpty": {},
  "customLocationsBuggy": "Custom locations are extremely buggy due to issues with permissions. I'm thinking of ways to fix this, but for now I wouldn't recommend using them.",
  "@customLocationsBuggy": {},
  "enterLowPriorityStateOnPause": "Enter Low-Priority State on Pause",
  "@enterLowPriorityStateOnPause": {},
  "enterLowPriorityStateOnPauseSubtitle": "Lets the notification be swiped away when paused. Also allows Android to kill the service when paused.",
  "@enterLowPriorityStateOnPauseSubtitle": {},
  "shuffleAllSongCount": "Shuffle All Song Count",
  "@shuffleAllSongCount": {},
  "shuffleAllSongCountSubtitle": "Amount of songs to load when using the shuffle all songs button.",
  "@shuffleAllSongCountSubtitle": {},
  "viewType": "View Type",
  "@viewType": {},
  "viewTypeSubtitle": "View type for the music screen",
  "@viewTypeSubtitle": {},
  "list": "List",
  "@list": {},
  "grid": "Grid",
  "@grid": {},
  "portrait": "Portrait",
  "@portrait": {},
  "landscape": "Landscape",
  "@landscape": {},
  "gridCrossAxisCount": "{value} Grid Cross-Axis Count",
  "@gridCrossAxisCount": {
    "description": "List tile title for grid cross axis count. Value will either be the portrait or landscape key.",
    "placeholders": {
      "value": {
        "type": "String",
        "example": "Portrait"
      }
    }
  },
  "gridCrossAxisCountSubtitle": "Amount of grid tiles to use per-row when {value}.",
  "@gridCrossAxisCountSubtitle": {
    "description": "List tile subtitle for grid cross axis count. Value will either be the portrait or landscape key.",
    "placeholders": {
      "value": {
        "type": "String",
        "example": "landscape"
      }
    }
  },
  "showTextOnGridView": "Show text in grid view",
  "@showTextOnGridView": {},
  "showTextOnGridViewSubtitle": "Whether or not to show the text (title, artist etc) on the grid music screen.",
  "@showTextOnGridViewSubtitle": {},
  "showCoverAsPlayerBackground": "Show blurred cover as player background",
  "@showCoverAsPlayerBackground": {},
  "showCoverAsPlayerBackgroundSubtitle": "Whether or not to use blurred cover art as background on player screen.",
  "@showCoverAsPlayerBackgroundSubtitle": {},
  "hideSongArtistsIfSameAsAlbumArtists": "Hide song artists if same as album artists",
  "@hideSongArtistsIfSameAsAlbumArtists": {},
  "hideSongArtistsIfSameAsAlbumArtistsSubtitle": "Whether to show song artists on the album screen if not differing from album artists.",
  "@hideSongArtistsIfSameAsAlbumArtistsSubtitle": {},
  "disableGesture": "Disable gestures",
  "@disableGesture": {},
  "disableGestureSubtitle": "Whether to disables gestures.",
  "@disableGestureSubtitle": {},
  "showFastScroller": "Show fast scroller",
  "@showFastScroller": {},
  "theme": "Theme",
  "@theme": {},
  "system": "System",
  "@system": {},
  "light": "Light",
  "@light": {},
  "dark": "Dark",
  "@dark": {},
  "tabs": "Tabs",
  "@tabs": {},
  "cancelSleepTimer": "Cancel Sleep Timer?",
  "@cancelSleepTimer": {},
  "yesButtonLabel": "YES",
  "@yesButtonLabel": {},
  "noButtonLabel": "NO",
  "@noButtonLabel": {},
  "setSleepTimer": "Set Sleep Timer",
  "@setSleepTimer": {},
  "minutes": "Minutes",
  "@minutes": {},
  "invalidNumber": "Invalid Number",
  "@invalidNumber": {},
  "sleepTimerTooltip": "Sleep timer",
  "@sleepTimerTooltip": {},
  "sleepTimerRemainingTime": "Sleeping in {time} minutes",
  "@sleepTimerRemainingTime": {
    "description": "Button label for sleep timer. {time} is the amount of minutes left.",
    "placeholders": {
      "time": {
        "type": "int"
      }
    }
  },
  "addToPlaylistTooltip": "Add to playlist",
  "@addToPlaylistTooltip": {},
  "addToPlaylistTitle": "Add to Playlist",
  "@addToPlaylistTitle": {},
  "removeFromPlaylistTooltip": "Remove from playlist",
  "@removeFromPlaylistTooltip": {},
  "removeFromPlaylistTitle": "Remove from Playlist",
  "@removeFromPlaylistTitle": {},
  "newPlaylist": "New Playlist",
  "@newPlaylist": {},
  "createButtonLabel": "CREATE",
  "@createButtonLabel": {},
  "playlistCreated": "Playlist created.",
  "@playlistCreated": {},
  "noAlbum": "No Album",
  "@noAlbum": {},
  "noItem": "No Item",
  "@noItem": {},
  "noArtist": "No Artist",
  "@noArtist": {},
  "unknownArtist": "Unknown Artist",
  "@unknownArtist": {},
  "unknownAlbum": "Unknown Album",
  "@unknownAlbum": {},
  "playbackModeDirectPlaying": "Direct Playing",
  "@playbackModeDirectPlaying": {
    "description": "Feature chip that is shown when songs are being played directly from the server, without transcoding"
  },
  "playbackModeTranscoding": "Transcoding",
  "@playbackModeTranscoding": {
    "description": "Feature chip that is shown when songs are being transcoded by the server"
  },
  "kiloBitsPerSecondLabel": "{bitrate} kbps",
  "@kiloBitsPerSecondLabel": {
    "description": "Label for the bitrate of a song or for transcoding. The value will be the bitrate in kilobits per second.",
    "placeholders": {
      "bitrate": {
        "type": "int",
        "example": "320"
      }
    }
  },
  "playbackModeLocal": "Locally Playing",
  "@playbackModeLocal": {
    "description": "Feature chip that is shown when songs are being played from local downloads, without using the server"
  },
  "queue": "Queue",
  "@queue": {},
  "addToQueue": "Add to Queue",
  "@addToQueue": {
    "description": "Popup menu item title for adding an item to the end of the play queue."
  },
  "replaceQueue": "Replace Queue",
  "@replaceQueue": {},
  "instantMix": "Instant Mix",
  "@instantMix": {},
  "goToAlbum": "Go to Album",
  "@goToAlbum": {},
  "goToArtist": "Go to Artist",
  "@goToArtist": {},
  "goToGenre": "Go to Genre",
  "@goToGenre": {},
  "removeFavourite": "Remove Favourite",
  "@removeFavourite": {},
  "addFavourite": "Add Favourite",
  "@addFavourite": {},
  "confirmFavoriteAdded": "Added Favorite",
  "@confirmFavoriteAdded": {},
  "confirmFavoriteRemoved": "Removed Favorite",
  "@confirmFavoriteRemoved": {},
  "addedToQueue": "Added to queue.",
  "@addedToQueue": {
    "description": "Snackbar message that shows when the user successfully adds items to the end of the play queue."
  },
  "insertedIntoQueue": "Inserted into queue.",
  "@insertedIntoQueue": {
    "description": "Snackbar message that shows when the user successfully inserts items into the play queue at a location that is not necessarily the end."
  },
  "queueReplaced": "Queue replaced.",
  "@queueReplaced": {},
  "confirmAddedToPlaylist": "Added to playlist.",
  "@confirmAddedToPlaylist": {
    "description": "Snackbar message that shows when the user successfully adds items to a playlist."
  },
  "removedFromPlaylist": "Removed from playlist.",
  "@removedFromPlaylist": {},
  "startingInstantMix": "Starting instant mix.",
  "@startingInstantMix": {},
  "anErrorHasOccured": "An error has occured.",
  "@anErrorHasOccured": {},
  "responseError": "{error} Status code {statusCode}.",
  "@responseError": {
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Forbidden"
      },
      "statusCode": {
        "type": "int",
        "example": "403"
      }
    }
  },
  "responseError401": "{error} Status code {statusCode}. This probably means you used the wrong username/password, or your client is no longer logged in.",
  "@responseError401": {
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Unauthorized"
      },
      "statusCode": {
        "type": "int",
        "example": "401"
      }
    }
  },
  "removeFromMix": "Remove From Mix",
  "@removeFromMix": {},
  "addToMix": "Add To Mix",
  "@addToMix": {},
  "redownloadedItems": "{count,plural, =0{No redownloads needed.} =1{Redownloaded {count} item} other{Redownloaded {count} items}}",
  "@redownloadedItems": {
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "bufferDuration": "Buffer Duration",
  "@bufferDuration": {},
  "bufferDurationSubtitle": "How much the player should buffer, in seconds. Requires a restart.",
  "@bufferDurationSubtitle": {},
  "language": "Language",
  "@language": {},
  "previousTracks": "Previous Songs",
  "@previousTracks": {
    "description": "Description in the queue panel for the list of songs that come before the current song in the queue. The songs might not actually have been played (e.g. if the user skipped ahead to a specific song)."
  },
  "nextUp": "Next Up",
  "@nextUp": {
    "description": "Description in the queue panel for the list of songs were manually added to be played after the current song. This should be capitalized (if applicable) to be more recognizable throughout the UI"
  },
  "clearNextUp": "Clear Next Up",
  "@clearNextUp": {
    "description": "Label for the action that deletes all songs added to Next Up"
  },
  "playingFrom": "Playing from",
  "@playingFrom": {
    "description": "Prefix shown before the name of the main queue source, like the album or playlist that was used to start playback. Example: \"Playing from {My Nice Playlist}\""
  },
  "playNext": "Play next",
  "@playNext": {
    "description": "Used for adding a song to the \"Next Up\" queue at the first position, to play right after the current song finishes playing"
  },
  "addToNextUp": "Add to Next Up",
  "@addToNextUp": {
    "description": "Used for adding a song to the \"Next Up\" queue at the end, to play after all prior songs from Next Up have played "
  },
  "shuffleNext": "Shuffle next",
  "@shuffleNext": {
    "description": "Used for shuffling a list (album, playlist, etc.) to the \"Next Up\" queue at the first position, to play right after the current song finishes playing"
  },
  "shuffleToNextUp": "Shuffle to Next Up",
  "@shuffleToNextUp": {
    "description": "Used for shuffling a list (album, playlist, etc.) to the end of the \"Next Up\" queue, to play after all prior songs from Next Up have played "
  },
  "shuffleToQueue": "Shuffle to queue",
  "@shuffleToQueue": {
    "description": "Used for shuffling a list (album, playlist, etc.) to the end of the regular queue, to play after all prior songs from the queue have played "
  },
  "confirmPlayNext": "{type, select, track{Song} album{Album} artist{Artist} playlist{Playlist} genre{Genre} other{Item}} will play next",
  "@confirmPlayNext": {
    "description": "A confirmation message that is shown after successfully adding a song to the front of the \"Next Up\" queue",
    "placeholders": {
      "type": {
        "type": "String"
      }
    }
  },
  "confirmAddToNextUp": "Added {type, select, track{song} album{album} artist{artist} playlist{playlist} genre{genre} other{item}} to Next Up",
  "@confirmAddToNextUp": {
    "description": "A confirmation message that is shown after successfully adding a song to the end of the \"Next Up\" queue",
    "placeholders": {
      "type": {
        "type": "String"
      }
    }
  },
  "confirmAddToQueue": "Added {type, select, track{song} album{album} artist{artist} playlist{playlist} genre{genre} other{item}} to queue",
  "@confirmAddToQueue": {
    "description": "A confirmation message that is shown after successfully adding a song to the end of the regular queue",
    "placeholders": {
      "type": {
        "type": "String"
      }
    }
  },
  "confirmShuffleNext": "Will shuffle next",
  "@confirmShuffleNext": {
    "description": "A confirmation message that is shown after successfully shuffling a list (album, playlist, etc.) to the front of the \"Next Up\" queue"
  },
  "confirmShuffleToNextUp": "Shuffled to Next Up",
  "@confirmShuffleToNextUp": {
    "description": "A confirmation message that is shown after successfully shuffling a list (album, playlist, etc.) to the end of the \"Next Up\" queue"
  },
  "confirmShuffleToQueue": "Shuffled to queue",
  "@confirmShuffleToQueue": {
    "description": "A confirmation message that is shown after successfully shuffling a list (album, playlist, etc.) to the end of the regular queue"
  },
  "placeholderSource": "Somewhere",
  "@placeholderSource": {
    "description": "Placeholder text used when the source of the current song/queue is unknown"
  },
  "playbackHistory": "Playback History",
  "@playbackHistory": {
    "description": "Title for the playback history screen, where the user can see a list of recently played songs, sorted by "
  },
  "shareOfflineListens": "Share offline listens",
  "@shareOfflineListens": {
    "description": "Button for exporting the JSON file containing any playback events that couldn't be submitted to the server, either because offline mode was enabled or the connection failed"
  },
  "yourLikes": "Your Likes",
  "@yourLikes": {
    "description": "Title for the queue source when the user is playing their liked songs"
  },
  "mix": "{mixSource} - Mix",
  "@mix": {
    "description": "Suffix added to a queue source when playing a mix. Example: \"Never Gonna Give You Up - Mix\"",
    "placeholders": {
      "mixSource": {
        "type": "String",
        "example": "Never Gonna Give You Up"
      }
    }
  },
  "tracksFormerNextUp": "Songs added via Next Up",
  "@tracksFormerNextUp": {
    "description": "Title for the queue source for songs that were once added to the queue via the \"Next Up\" feature, but have since been played"
  },
  "savedQueue": "Saved Queue",
  "@savedQueue": {
    "description": "Title for the queue source for songs were previously in the queue before an app restart and have been reloaded"
  },
  "playingFromType": "Playing From {source, select, album{Album} playlist{Playlist} songMix{Song Mix} artistMix{Artist Mix} albumMix{Album Mix} favorites{Favorites} allSongs{All Songs} filteredList{Songs} genre{Genre} artist{Artist} nextUpAlbum{Album in Next Up} nextUpPlaylist{Playlist in Next Up} nextUpArtist{Artist in Next Up} other{}}",
  "@playingFromType": {
    "description": "Prefix shown before the type of the main queue source at the top of the player screen. Example: \"Playing From Album\"",
    "placeholders": {
      "source": {
        "type": "String"
      }
    }
  },
  "shuffleAllQueueSource": "Shuffle All",
  "@shuffleAllQueueSource": {
    "description": "Title for the queue source when the user is shuffling all songs. Should be capitalized (if applicable) to be more recognizable throughout the UI"
  },
  "playbackOrderLinearButtonLabel": "Playing in order",
  "@playbackOrderLinearButtonLabel": {
    "description": "Label for the button that toggles the playback order between linear/in-order and shuffle, while the queue is in linear/in-order mode"
  },
  "playbackOrderShuffledButtonLabel": "Shuffling songs",
  "@playbackOrderShuffledButtonLabel": {
    "description": "Label for the button that toggles the playback order between linear/in-order and shuffle, while the queue is in shuffle mode"
  },
  "loopModeNoneButtonLabel": "Looping off",
  "@loopModeNoneButtonLabel": {
    "description": "Label for the button that toggles the loop mode between off, loop one, and loop all, while the queue is in loop off mode"
  },
  "loopModeOneButtonLabel": "Looping this song",
  "@loopModeOneButtonLabel": {
    "description": "Label for the button that toggles the loop mode between off, loop one, and loop all, while the queue is in loop one mode"
  },
  "loopModeAllButtonLabel": "Looping all",
  "@loopModeAllButtonLabel": {
    "description": "Label for the button that toggles the loop mode between off, loop one, and loop all, while the queue is in loop all mode"
  },
  "queuesScreen": "Restore Now Playing",
  "@queuesScreen": {
     "description": "Title for the screen where older now playing queues can be restored"
  },
  "queueRestoreButtonLabel": "Restore",
  "@queueRestoreButtonLabel": {
    "description": "Button to restore archived now playing queue, overwriting current queue"
  },
  "queueRestoreTitle": "Saved {date}",
  "@queueRestoreTitle": {
    "description": "Description of when a saved queue was saved",
    "placeholders": {
      "date" : {
        "type": "DateTime",
        "format": "yyy-MM-dd hh:mm",
        "isCustomDateFormat": "true"
      }
    }
  },
  "queueRestoreSubtitle1": "Playing: {song}",
  "@queueRestoreSubtitle1": {
    "description": "Description of playing song in a saved queue",
    "placeholders": {
      "song": {
        "type": "String"
      }
    }
  },
  "queueRestoreSubtitle2": "{count,plural,=1{1 Song} other{{count} Songs}}, {remaining} Unplayed",
  "@queueRestoreSubtitle2": {
    "description": "Description of length of a saved queue",
    "placeholders": {
      "count": {
        "type": "int"
      },
      "remaining": {
        "type": "int"
      }
    }
  },
  "queueLoadingMessage": "Restoring queue...",
  "@queueLoadingMessage": {
    "description": "Message displayed on now-playing bar when a saved queue is loading."
  },
  "queueRetryMessage": "Failed to restore queue. Retry?",
  "@queueRetryMessage": {
    "description": "Message displayed on now-playing bar when all items in a saved queue fail to load."
  },
  "autoloadLastQueueOnStartup": "Auto-Restore Last Queue",
  "@autoloadLastQueueOnStartup": {
    "description": "Setting to restore last queue on startup"
  },
  "autoloadLastQueueOnStartupSubtitle": "Upon app startup, attempt to restore the last played queue.",
  "@autoloadLastQueueOnStartupSubtitle": {
    "description": "Description of the setting to restore last queue on startup"
  },
  "topSongs": "Top Songs",
  "@topSongs": {},
  "albumCount": "{count,plural,=1{{count} Album} other{{count} Albums}}",
  "@albumCount": {},
  "shuffleAlbums": "Shuffle Albums",
  "@shuffleAlbums": {
    "description": "Label for action that shuffles all albums of an artist or genre"
  },
  "shuffleAlbumsNext": "Shuffle Albums Next",
  "@shuffleAlbumsNext": {
    "description": "Label for action that shuffles all albums of an artist or genre and adds them at the start of Next Up"
  },
  "shuffleAlbumsToNextUp": "Shuffle Albums To Next Up",
  "@shuffleAlbumsToNextUp": {
    "description": "Label for action that shuffles all albums of an artist or genre and adds them at the end of Next Up"
  },
  "shuffleAlbumsToQueue": "Shuffle Albums To Queue",
  "@shuffleAlbumsToQueue": {
    "description": "Label for action that shuffles all albums of an artist or genre and adds them at the end of the regular queue"
  },
  "playCountValue": "{playCount,plural,=1{{playCount} play} other{{playCount} plays}}",
  "@playCountValue": {
    "placeholders": {
      "playCount": {
        "type": "int",
        "example": "12"
      }
    }
  },
  "couldNotLoad": "Couldn't load {source, select, album{album} playlist{playlist} songMix{song mix} artistMix{artist mix} albumMix{album mix} favorites{favorites} allSongs{all songs} filteredList{songs} genre{genre} artist{artist} nextUpAlbum{album in next up} nextUpPlaylist{playlist in next up} nextUpArtist{artist in next up} other{}}",
  "@couldNotLoad": {},
  "confirm": "Confirm",
  "close": "Close",
  "showUncensoredLogMessage": "This log contains your login information. Show?",
  "resetTabs": "Reset tabs",
  "noMusicLibrariesTitle": "No Music Libraries",
  "@noMusicLibrariesTitle": {
    "description": "Title for message that shows on the views screen when no music libraries could be found."
  },
  "noMusicLibrariesBody": "Finamp could not find any music libraries. Please ensure that your Jellyfin server contains at least one library with the content type set to \"Music\".",
  "refresh": "REFRESH",
  "moreInfo": "More Info",
  "replayGainSettingsTitle": "Replay Gain",
  "@replayGainSettingsTitle": {
    "description": "Title for the replay gain settings screen"
  },
  "replayGainSwitchTitle": "Enable Replay Gain",
  "@replayGainSwitchTitle": {
    "description": "Title for the switch that toggles replay gain"
  },
  "replayGainSwitchSubtitle": "Use LUFS information to normalize the loudness of songs",
  "@replayGainSwitchSubtitle": {
    "description": "Subtitle for the switch that toggles replay gain"
  },
  "replayGainTargetLufsEditorTitle": "Replay Gain Target LUFS",
  "@replayGainTargetLufsEditorTitle": {
    "description": "Title for the input that sets the replay gain target LUFS"
  },
  "replayGainTargetLufsEditorSubtitle": "The target loudness (LUFS value) in decibels (dB) for replay gain to normalize to",
  "@replayGainTargetLufsEditorSubtitle": {
    "description": "Subtitle for the input that sets the replay gain target LUFS"
  },
  "replayGainNormalizationFactorEditorTitle": "Replay Gain Normalization Factor",
  "@replayGainNormalizationFactorEditorTitle": {
    "description": "Title for the input that sets the replay gain normalization factor"
  },
  "replayGainNormalizationFactorEditorSubtitle": "How much to normalize the volume by. Controls the 'aggressiveness' of the normalization.",
  "@replayGainNormalizationFactorEditorSubtitle": {
    "description": "Subtitle for the input that sets the replay gain normalization factor"
  },
  "replayGainModeSelectorTitle": "Replay Gain Mode",
  "@replayGainModeSelectorTitle": {
    "description": "Title for the dropdown that selects the replay gain mode"
  },
  "replayGainModeSelectorSubtitle": "When and how to apply Replay Gain",
  "@replayGainModeSelectorSubtitle": {
    "description": "Subtitle for the dropdown that selects the replay gain mode"
  },
  "replayGainModeSelectorDescription": "Hybrid (Song + Album): Song gain is used for regular playback, but if an album is playing (either because it's the main playback queue source, or because it was added to the queue at some point), the album gain is used instead.\n\nSongs Only: Song gain is always used, regardless of whether an album is playing or not.\n\nAlbums Only: Replay Gain is only applied while playing albums (using the album gain), but not for individual songs.",
  "@replayGainModeSelectorDescription": {
    "description": "Description for the dropdown that selects the replay gain mode, shown in a dialog that opens when the user presses the info icon next to the dropdown"
  },
  "replayGainModeHybrid": "Hybrid (Song + Album)",
  "@replayGainModeHybrid": {
    "description": "'Hybrid' option for the replay gain mode dropdown. In hybrid mode, the song gain is used for regular playback, but if an album is playing (either because it's the main playback queue source, or because it was added to the queue at some point), the album gain is used instead."
  },
  "replayGainModeTrackOnly": "Songs Only",
  "@replayGainModeTrackOnly": {
    "description": "'Songs Only' option for the replay gain mode dropdown. In songs-only mode, the track gain is always used, regardless of whether an album is playing or not."
  },
  "replayGainModeAlbumOnly": "Albums Only",
  "@replayGainModeAlbumOnly": {
    "description": "'Albums Only' option for the replay gain mode dropdown. In albums-only mode, Replay Gain is only applied while playing albums (using the album gain), but not for individual songs."
  },
  "replayGainIOSBaseGainEditorTitle": "Base Gain (iOS and other non-Android platforms only)",
  "@replayGainIOSBaseGainEditorTitle": {
    "description": "Title for the input that sets the replay gain base gain on iOS and other non-Android platforms"
  },
  "replayGainIOSBaseGainEditorSubtitle": "Currently, Replay Gain on iOS required changing the playback volume to emulate the gain change. Since we can't increase the volume above 100%, we need to decrease the volume by default so that we can boost the volume of quiet songs. The value is in decibels (dB), where -10 dB is 50% volume and -5 dB is 75% volume.",
  "@replayGainIOSBaseGainEditorSubtitle": {
    "description": "Subtitle for the input that sets the replay gain base gain on iOS and other non-Android platforms"
  },
  "swipeInsertQueueNext": "Play Swiped Song Next",
  "@swipeInsertQueueNext": {},
  "swipeInsertQueueNextSubtitle": "Enable to insert a song as next item in queue when swiped in song list instead of appending it to the end.",
  "@swipeInsertQueueNextSubtitle": {},
  "downloadItem": "Download",
  "@downloadItem": {
    "description": "Option to download item in long-press menu."
  },
  "deleteItem": "Delete",
  "@deletedItem": {
    "description": "Option to delete item in long-press menu."
  },
  "repairComplete": "Downloads Repair complete.",
  "@repairComplete": {
    "description": "Message displayed after download repair completes."
  },
  "syncComplete": "All downloads re-synced.",
  "@syncComplete": {
    "description": "Message displayed after download sync completes."
  },
  "syncDownloads": "Sync and download all items.",
  "@syncDownloads": {
    "description": "Tooltip for downloads sync button."
  },
  "repairDownloads": "Repair issues with downloaded files or metadata.",
  "@repairDownloads": {
    "description": "Tooltip for downloads repair button."
  },
  "requireWifiForDownloads": "Require WiFi when downloading.",
  "@requireWifiForDownloads": {
    "description": "Description of setting for only performing downloads while on wifi"
  },
  "queueRestoreError": "Warning: {count,plural, =1{{count} song} other{{count} songs}} could not be restored to the queue.",
  "@queueRestoreError": {
    "description": "Message that shows when some, but not all, songs in the Now-Playing queue from the previous session cannot be restored due to server issues or being offline.",
    "placeholders": {
      "count": {
        "type": "int"
      }
    }
  },
  "activeDownloadsListHeader": "{itemCount} {typeName, select, downloading{Running} failed{Failed} syncFailed{Repeatedly Unsynced} enqueued{Queued} other{}} {itemCount, plural, =1{Download} other{Downloads}}}",
  "@activeDownloadsListHeader": {
    "description": "Header text for lists of active downloads of a particular state.",
    "placeholders": {
      "typeName": {
        "type": "String"
      },
      "itemCount": {
        "type": "int"
      }
    }
  },
  "downloadLibraryPrompt": "Are you sure you want to download all contents of the library '{ libraryName }'?",
  "@downloadLibraryPrompt": {
    "description": "Confirmation prompt before downloading entire library, which may be large.",
    "placeholders": {
      "libraryName": {
        "type": "String"
      }
    }
  },
  "onlyShowFullyDownloaded": "Only show fully downloaded albums",
  "@onlyShowFullyDownloaded": {
    "description": "Tooltip for button that hides all partially downloaded albums"
  },
  "filesystemFull": "Remaining downloads cannot be completed.  The filesystem is full.",
  "@filesystemFull": {
    "description": "Message shown when a download cannot complete due to the filesystem being full."
  },
  "connectionInterrupted": "Connection interrupted, pausing downloads.",
  "@connectionInterrupted": {
    "description": "Message shown when the connection is interrupted during a download."
  },
  "connectionInterruptedBackground": "Connection was interrupted while downloading in the background.  This can be caused by OS settings.",
  "@connectionInterruptedBackground": {
    "description": "Message shown when the connection is interrupted during a download while in the background.  It advises checking OS settings, as they may cause background downloads to be blocked."
  },
  "connectionInterruptedBackgroundAndroid": "Connection was interrupted while downloading in the background.  This can be caused by enabling 'Enter Low-Priority State on Pause' or OS settings.",
  "@connectionInterruptedBackgroundAndroid": {
    "description": "Message shown when the connection is interrupted during a download while in the background on android.  It advises checking OS settings, as they may cause background downloads to be blocked, or checking the  'Enter Low-Priority State on Pause' setting."
  },
  "activeDownloadSize": "Downloading...",
  "@activeDownloadSize": {
    "description": "Message shown for download size while item is still being downloaded"
  },
  "missingDownloadSize": "Deleting...",
  "@missingDownloadSize": {
    "description": "Message shown for download size while item is being deleted but is not fully removed"
  },
  "syncingDownloadSize": "Syncing...",
  "@syncingDownloadSize": {
    "description": "Message shown for download size while item is still syncing."
  },
  "runRepairWarning": "The server could not be contacted to finalize downloads migration.  Please run 'Repair Downloads' from the downloads screen as soon as you are back online.",
  "@runRepairWarning": {
    "description": "Message shown when an error occurs during the downloads repair step of the Isar downloads migration, which requires a server connection."
  },
  "downloadSettings": "Download Settings",
  "@downloadSettings": {},
  "showNullLibraryItemsTitle": "Show Media with Unknown Library.",
  "@showNullLibraryItemsTitle": {
    "description": "Title of setting that shows songs/albums from an unknown library in all libraries when on, or in no libraries when off."
  },
  "showNullLibraryItemsSubtitle": "Some media may be downloaded with an unknown library.  Turn off to hide these outside their original collection.",
  "@showNullLibraryItemsSubtitle": {
    "description": "Description of setting that shows songs/albums from an unknown library in all libraries when on, or in no libraries when off."
  },
  "maxConcurrentDownloads": "Max Concurrent Downloads",
  "@maxConcurrentDownloads": {
    "description": "Title of setting controlling max concurrent downloads."
  },
  "maxConcurrentDownloadsSubtitle": "Increasing concurrent downloads may allow increased downloading in the background but may cause some downloads to fail if very large, or cause excessive lag in some cases.",
  "@maxConcurrentDownloadsSubtitle": {
    "description": "Description of setting controlling max concurrent downloads."
  },
  "maxConcurrentDownloadsLabel": "{ count} Concurrent Downloads",
  "@maxConcurrentDownloadsLabel": {
    "description": "Label of values on max concurrent downloads slider",
    "placeholders": {
      "count": {
        "type": "String"
      }
    }
  },
  "downloadsWorkersSetting": "Download Worker count",
  "@downloadsWorkersSetting": {
    "description": "Title of setting controlling download worker count."
  },
  "downloadsWorkersSettingSubtitle": "Amount of workers for syncing metadata and deleting downloads.  Increasing download workers may speed up download syncing and deleting, especially when server latency is high, but can introduce lag.",
  "@downloadsWorkersSettingSubtitle": {
    "description": "Description of setting controlling download worker count."
  },
  "downloadsWorkersSettingLabel": "{ count} Download Workers",
  "@downloadsWorkersSettingLabel": {
    "description": "Label of values on download worker count slider",
    "placeholders": {
      "count": {
        "type": "String"
      }
    }
  },
  "syncOnStartupSwitch": "Automatically Sync Downloads at Startup",
  "@syncOnStartupSwitch": {
    "description": "Title of setting for automatically triggering a throttled resync on app startup."
  },
  "preferQuickSyncSwitch": "Prefer Quick Syncs",
  "@preferQuickSyncSwitch": {
    "description": "Title of setting that skips completed albums while syncing."
  },
  "preferQuickSyncSwitchSubtitle": "When performing syncs, some typically static items (like songs and albums) will not be updated.  Download repair will always perform a full sync.",
  "@preferQuickSyncSwitchSubtitle": {
    "description": "Description of setting that skips completed albums while syncing."
  },
  "itemTypeSubtitle": "{itemType, select, album{Album} playlist{Playlist} artist{Artist} genre{Genre} song{Song} library{Library} unknown{Item} other{{itemType}}} {itemName}",
  "@itemTypeSubtitle": {
    "placeholders": {
      "itemType": {
        "type": "String",
        "example": "album"
      },
      "itemName":  {
        "type": "String"
      }
    },
    "description": "Subtitle for the type of a downloaded item, shown when syncing fails and in DownloadButton tooltip."
  },
  "incidentalDownloadTooltip": "This item is required to be downloaded by {parentName}.",
  "@incidentalDownloadTooltip": {
    "placeholders": {
      "parentName": {
        "type": "String"
      }
    },
    "description": "Tooltip for downloadbutton on incidental downloads, which show a lock icon.  It says one of the requiring downloads."
  },
  "finampCollectionNames": "{itemType, select, favorites{Favorites} allPlaylists{All Playlists} fiveLatestAlbums{5 Latest Albums} other{{itemType}} }",
  "@finampCollectionNames": {
    "placeholders": {
      "itemType": {
        "type": "String"
      }
    },
    "description": "Localized names of special downloadable collections like favorites."
  },
  "downloadTranscodeEnableTitle": "Enable Transcoded Downloads",
  "@downloadTranscodeEnableTitle": {
    "description": "Title for Enable Transcoded Downloads dropdown"
  },
  "downloadTranscodeCodecTitle": "Select Download Codec",
  "@downloadTranscodeCodecTitle": {
    "description": "Title for Select Download Codec dropdown"
  },
  "downloadTranscodeEnableOption": "{option, select, always{Always} never{Never} ask{Ask} other{{option}} }",
  "@downloadTranscodeEnableOption": {
    "placeholders": {
      "option": {
        "type": "String"
      }
    },
    "description": "Options in Select Download Codec dropdown"
  },
  "downloadBitrate": "Download Bitrate",
  "@downloadBitrate": {
    "description": "Title for Download Bitrate settings slider"
  },
  "downloadBitrateSubtitle": "A higher bitrate gives higher quality audio at the cost of larger storage requirements.",
  "@downloadBitrateSubtitle": {
    "description": "subtitle for Download Bitrate settings slider"
  },
  "transcodeHint": "Transcode?",
  "@transcodeHint": {
    "description": "Initial text in downloads dropdown when 'Enable Transcoded Downloads' is set to ask."
  },
  "doTranscode":  "Download as {codec} @ {bitrate}{size, select, null{} other{ - ~{size}}}",
  "@doTranscode": {
    "placeholders": {
      "bitrate": {
        "type": "String",
        "example": "123kbps"
      },
      "codec": {
        "type": "String",
        "example": "OPUS"
      },
      "size": {
        "type": "String",
        "example": "167 MB"
      }
    },
    "description": "Dropdown option to download transcoded version of songs"
  },
  "downloadInfo":  "{size} {codec}{bitrate, select, null{} other{ @ {bitrate} Transcoded}}",
  "@downloadInfo": {
    "placeholders": {
      "bitrate": {
        "type": "String",
        "example": "234kbps"
      },
      "codec": {
        "type": "String",
        "example": "FLAC"
      },
      "size": {
        "type": "String",
        "example": "456"
      }
    },
    "description": "Song info line in downloads screen lists"
  },
  "collectionDownloadInfo":  "{size}{codec, select, ORIGINAL{} other{ as {codec} @ {bitrate}}}",
  "@collectionDownloadInfo": {
    "placeholders": {
      "bitrate": {
        "type": "String",
        "example": "234kbps"
      },
      "codec": {
        "type": "String",
        "example": "FLAC"
      },
      "size": {
        "type": "String",
        "example": "456"
      }
    },
    "description": "Collection info line in downloads screen lists"
  },
  "dontTranscode": "Download original{description, select, null{} other { - {description}}}",
  "@dontTranscode": {
    "placeholders": {
      "description": {
        "type": "String",
        "example": "456 MB FLAC"
      }
    },
    "description": "Dropdown option to download original version of songs"
  },
  "redownloadcomplete": "Transcode Redownload queued.",
  "@redownloadcomplete": {
    "description": "Mesage when Automatically Redownload Transcodes transcode setting completes operations."
  },
  "redownloadTitle": "Automatically Redownload Transcodes",
  "@redownloadTitle": {
    "description": "Title for download transcode setting which redownloads songs with higher allowed qualities"
  },
  "redownloadSubtitle": "Automatically redownload songs which are expected to be at a different quality due to parent collection changes.",
  "@redownloadSubtitle": {
    "description": "subtitle for download transcode setting which redownloads songs with higher allowed qualities"
  },
  "disableVibration": "Disable vibration",
  "@disableVibration": {},
  "disableVibrationSubtitle": "Whether to disable vibration.",
  "@disableVibrationSubtitle": {}
}
